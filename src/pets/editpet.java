/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pets;

import config.dbConnector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

public class editpet extends javax.swing.JFrame {
    private String selectedImagePath = null;
    private int petId;

    public editpet(int petId) {
        this.petId = petId;
        initComponents();
        loadPetDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        petname = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        imagepath = new javax.swing.JLabel();
        species = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        breed = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        editpet = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        color = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        age = new javax.swing.JTextField();
        selectPetImage = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(142, 177, 217));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Edit Pet");
        jPanel8.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 500, -1));

        jPanel7.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 60));

        petname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        petname.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(petname, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 160, -1));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Pet Name");
        jPanel7.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 70, -1));

        imagepath.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        imagepath.setText("Image Path:");
        jPanel7.add(imagepath, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 150, -1));

        species.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        species.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(species, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 160, -1));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Species");
        jPanel7.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, -1, -1));

        breed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        breed.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(breed, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 160, -1));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Breed");
        jPanel7.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        editpet.setBackground(new java.awt.Color(46, 134, 222));
        editpet.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editpet.setText("Edit");
        editpet.setBorder(null);
        editpet.setPreferredSize(new java.awt.Dimension(350, 40));
        editpet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editpetActionPerformed(evt);
            }
        });
        jPanel7.add(editpet, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 310, -1));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Gender");
        jPanel7.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, -1, -1));

        color.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        color.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(color, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 160, -1));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("Color");
        jPanel7.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 70, -1));

        age.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(200, 200, 200)));
        age.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(age, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 160, -1));

        selectPetImage.setBackground(new java.awt.Color(142, 177, 217));
        selectPetImage.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        selectPetImage.setText("Select Image");
        selectPetImage.setBorder(null);
        selectPetImage.setPreferredSize(new java.awt.Dimension(350, 40));
        selectPetImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPetImageActionPerformed(evt);
            }
        });
        jPanel7.add(selectPetImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 150, 40));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setText("Age");
        jPanel7.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));

        gender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female", " ", " " }));
        gender.setPreferredSize(new java.awt.Dimension(350, 40));
        jPanel7.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 160, 40));

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loadPetDetails() {
        try {
            dbConnector dbc = new dbConnector();
            String query = "SELECT * FROM pets WHERE pet_id = ?";
            PreparedStatement pst = dbc.getConnection().prepareStatement(query);
            pst.setInt(1, petId);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                petname.setText(rs.getString("name"));
                species.setText(rs.getString("species"));
                breed.setText(rs.getString("breed"));
                age.setText(String.valueOf(rs.getInt("age")));
                gender.setSelectedItem(rs.getString("gender"));
                color.setText(rs.getString("color"));
                imagepath.setText(rs.getString("image_path"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error loading pet details: " + ex.getMessage());
        }
    }

    private void editpetActionPerformed(java.awt.event.ActionEvent evt) {
        // Validate inputs
        if (petname.getText().trim().isEmpty() || species.getText().trim().isEmpty() || 
            breed.getText().trim().isEmpty() || age.getText().trim().isEmpty() || 
            color.getText().trim().isEmpty() || gender.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please fill in all fields!");
            return;
        }

        try {
            int petAge = Integer.parseInt(age.getText().trim());
            if (petAge <= 0) {
                JOptionPane.showMessageDialog(null, "Age must be a positive number!");
                return;
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Age must be a valid number!");
            return;
        }

        try {
            dbConnector dbc = new dbConnector();
            String sql = "UPDATE pets SET name=?, species=?, breed=?, age=?, gender=?, color=?, image_path=? WHERE pet_id=?";
            PreparedStatement pst = dbc.getConnection().prepareStatement(sql);
            
            pst.setString(1, petname.getText().trim());
            pst.setString(2, species.getText().trim());
            pst.setString(3, breed.getText().trim());
            pst.setInt(4, Integer.parseInt(age.getText().trim()));
            pst.setString(5, gender.getSelectedItem().toString());
            pst.setString(6, color.getText().trim());
            pst.setString(7, imagepath.getText());
            pst.setInt(8, petId);
            
            int result = pst.executeUpdate();
            if (result > 0) {
                JOptionPane.showMessageDialog(null, "Pet updated successfully!");
                this.dispose();
                new petspage().setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to update pet!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error updating pet: " + ex.getMessage());
        }
    }

    private void selectPetImageActionPerformed(java.awt.event.ActionEvent evt) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif"));
        
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            selectedImagePath = selectedFile.getAbsolutePath();
            imagepath.setText(selectedFile.getName());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField age;
    private javax.swing.JTextField breed;
    private javax.swing.JTextField color;
    private javax.swing.JButton editpet;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel imagepath;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTextField petname;
    private javax.swing.JButton selectPetImage;
    private javax.swing.JTextField species;
    // End of variables declaration//GEN-END:variables
}
