/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adoption;

import admin.admindashboard;
import config.dbConnector;
import config.Session;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class adoptionrecordspage extends javax.swing.JFrame {

    public adoptionrecordspage() {
        initComponents();
        displayAdoptionRecords();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        acc_id = new javax.swing.JLabel();
        jlabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backbtn = new javax.swing.JLabel();
        WELCOME3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        adoptionsrecord = new javax.swing.JTable();
        approve = new javax.swing.JButton();
        viewadoption = new javax.swing.JButton();
        printcertificate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        background.setBackground(new java.awt.Color(255, 255, 255));
        background.setForeground(new java.awt.Color(255, 255, 255));
        background.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(123, 159, 207));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        acc_id.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        acc_id.setForeground(new java.awt.Color(255, 255, 255));
        acc_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acc_id.setText("ID");
        jPanel2.add(acc_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 801, 280, 42));

        jlabel.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jlabel.setForeground(new java.awt.Color(255, 255, 255));
        jlabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlabel.setText("Current User:");
        jPanel2.add(jlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 738, 280, 45));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LOGOUT");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 663, 280, 44));

        backbtn.setBackground(new java.awt.Color(142, 177, 217));
        backbtn.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backbtn.setForeground(new java.awt.Color(255, 255, 255));
        backbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backbtn.setText("BACK");
        backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backbtnMouseClicked(evt);
            }
        });
        jPanel2.add(backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 280, 45));

        WELCOME3.setFont(new java.awt.Font("HP Simplified Jpan", 0, 24)); // NOI18N
        WELCOME3.setForeground(new java.awt.Color(255, 255, 255));
        WELCOME3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WELCOME3.setText("ADOPTION'S PAGE");
        jPanel2.add(WELCOME3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 280, 70));

        background.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 280, 650));

        adoptionsrecord.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        adoptionsrecord.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(adoptionsrecord);

        background.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, 640, 400));

        approve.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        approve.setText("Approve Adoption");
        approve.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                approveMouseClicked(evt);
            }
        });
        approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveActionPerformed(evt);
            }
        });
        background.add(approve, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, 200, 50));

        viewadoption.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        viewadoption.setText("View Adoption");
        viewadoption.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewadoptionMouseClicked(evt);
            }
        });
        viewadoption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewadoptionActionPerformed(evt);
            }
        });
        background.add(viewadoption, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 200, 50));

        printcertificate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        printcertificate.setText("Print Certificate");
        printcertificate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printcertificateMouseClicked(evt);
            }
        });
        printcertificate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printcertificateActionPerformed(evt);
            }
        });
        background.add(printcertificate, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 100, 200, 50));

        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked

    }//GEN-LAST:event_jLabel2MouseClicked

    private void backbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backbtnMouseClicked
        new admindashboard().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backbtnMouseClicked

    private void approveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_approveMouseClicked
        approveAdoption();
    }//GEN-LAST:event_approveMouseClicked

    private void displayAdoptionRecords() {
        try {
            dbConnector dbc = new dbConnector();
            String query = "SELECT a.adoption_id, p.name as pet_name, CONCAT(u.u_firstname, ' ', u.u_lastname) as adopter_name, " +
                          "a.adoption_date, a.status " +
                          "FROM adoption_records a " +
                          "JOIN pets p ON a.pet_id = p.pet_id " +
                          "JOIN tbl_user u ON a.adopter_id = u.u_id " +
                          "ORDER BY a.adoption_date DESC";
            ResultSet rs = dbc.getData(query);
            adoptionsrecord.setModel(DbUtils.resultSetToTableModel(rs));
            
            // Set column headers
            adoptionsrecord.getColumnModel().getColumn(0).setHeaderValue("Adoption ID");
            adoptionsrecord.getColumnModel().getColumn(1).setHeaderValue("Pet Name");
            adoptionsrecord.getColumnModel().getColumn(2).setHeaderValue("Adopter Name");
            adoptionsrecord.getColumnModel().getColumn(3).setHeaderValue("Adoption Date");
            adoptionsrecord.getColumnModel().getColumn(4).setHeaderValue("Status");
            
            // Adjust column widths
            adoptionsrecord.getColumnModel().getColumn(0).setPreferredWidth(80);
            adoptionsrecord.getColumnModel().getColumn(1).setPreferredWidth(150);
            adoptionsrecord.getColumnModel().getColumn(2).setPreferredWidth(200);
            adoptionsrecord.getColumnModel().getColumn(3).setPreferredWidth(100);
            adoptionsrecord.getColumnModel().getColumn(4).setPreferredWidth(100);
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading adoption records: " + ex.getMessage());
        }
    }

    private void approveAdoption() {
        int selectedRow = adoptionsrecord.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an adoption record to approve!");
            return;
        }

        String status = adoptionsrecord.getValueAt(selectedRow, 4).toString();
        if (!status.equals("Pending")) {
            JOptionPane.showMessageDialog(this, "Only pending adoptions can be approved!");
            return;
        }

        int adoptionId = Integer.parseInt(adoptionsrecord.getValueAt(selectedRow, 0).toString());
        int confirm = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to approve this adoption request?", 
            "Confirm Approval", 
            JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                dbConnector dbc = new dbConnector();
                
                // First get the pet_id for this adoption
                String getPetQuery = "SELECT p.pet_id, p.status FROM adoption_records a " +
                                   "JOIN pets p ON a.pet_id = p.pet_id " +
                                   "WHERE a.adoption_id = ?";
                java.sql.PreparedStatement getPetStmt = dbc.getConnection().prepareStatement(getPetQuery);
                getPetStmt.setInt(1, adoptionId);
                java.sql.ResultSet rs = getPetStmt.executeQuery();
                
                if (rs.next()) {
                    int petId = rs.getInt("pet_id");
                    String petStatus = rs.getString("status");
                    
                    if (!petStatus.equals("Pending Adoption Approval")) {
                        JOptionPane.showMessageDialog(this, "This pet's status is not 'Pending Adoption Approval'!");
                        return;
                    }
                    
                    // Update adoption status
                    String updateAdoptionQuery = "UPDATE adoption_records SET status = 'Adopted' WHERE adoption_id = ?";
                    java.sql.PreparedStatement updateAdoptionStmt = dbc.getConnection().prepareStatement(updateAdoptionQuery);
                    updateAdoptionStmt.setInt(1, adoptionId);
                    int adoptionResult = updateAdoptionStmt.executeUpdate();
                    
                    // Update pet status
                    String updatePetQuery = "UPDATE pets SET status = 'Adopted' WHERE pet_id = ?";
                    java.sql.PreparedStatement updatePetStmt = dbc.getConnection().prepareStatement(updatePetQuery);
                    updatePetStmt.setInt(1, petId);
                    int petResult = updatePetStmt.executeUpdate();
                    
                    if (adoptionResult > 0 && petResult > 0) {
                        JOptionPane.showMessageDialog(this, "Adoption request approved successfully!");
                        displayAdoptionRecords(); // Refresh the table
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to approve adoption request!");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Could not find pet for this adoption!");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error approving adoption: " + ex.getMessage());
            }
        }
    }

    private void approveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveActionPerformed
        approveAdoption();
    }//GEN-LAST:event_approveActionPerformed

    private void viewadoptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewadoptionMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_viewadoptionMouseClicked

    private void viewadoptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewadoptionActionPerformed
        int selectedRow = adoptionsrecord.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an adoption record to view!");
            return;
        }
        int adoptionId = Integer.parseInt(adoptionsrecord.getValueAt(selectedRow, 0).toString());
        new viewadoption(adoptionId).setVisible(true);
    }//GEN-LAST:event_viewadoptionActionPerformed

    private void printcertificateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printcertificateMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_printcertificateMouseClicked

    private void printcertificateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printcertificateActionPerformed
        int selectedRow = adoptionsrecord.getSelectedRow();
        if (selectedRow == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select an adoption record to print the certificate!");
            return;
        }
        String adopterName = adoptionsrecord.getValueAt(selectedRow, 2).toString();
        String adoptionDate = adoptionsrecord.getValueAt(selectedRow, 3).toString();
        String petName = adoptionsrecord.getValueAt(selectedRow, 1).toString();

        adoption.certificates certForm = new adoption.certificates();
        certForm.setAdopterName(adopterName);
        certForm.setAdoptionDate(adoptionDate);
        certForm.setPetName(petName);
        certForm.setVisible(true);

        config.PanelPrinter printer = new config.PanelPrinter(certForm.jPanel1);
        printer.printPanel();
    }//GEN-LAST:event_printcertificateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adoptionrecordspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adoptionrecordspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adoptionrecordspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adoptionrecordspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adoptionrecordspage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel WELCOME3;
    private javax.swing.JLabel acc_id;
    private javax.swing.JTable adoptionsrecord;
    private javax.swing.JButton approve;
    private javax.swing.JLabel backbtn;
    private javax.swing.JPanel background;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlabel;
    private javax.swing.JButton printcertificate;
    private javax.swing.JButton viewadoption;
    // End of variables declaration//GEN-END:variables
}
